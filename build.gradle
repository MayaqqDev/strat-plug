plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url 'https://jitpack.io' }
    maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    mavenLocal()
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com" }
    maven {
        name = "Enchantment Descriptions"
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "Patchouli" // https://github.com/Vazkii/Patchouli
        url = 'https://maven.blamejared.com'
    }
    maven {
        name = "Ladysnake Mods"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        name "entity reach attribute"
        url "https://maven.jamieswhiteshirt.com/libs-release/"
    }
    maven { url 'https://maven.wispforest.io/' } // owo lib
    maven { url 'https://jitpack.io' }
    maven {
        name = "ProgrammerArtInjector"
        url = 'https://maven.extracraftx.com'
    }
    maven {
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        name = "Shimmer"
        url = 'https://maven.firstdarkdev.xyz/snapshots'
    }
    maven {
        name = "Curse"
        url = 'https://cfa2.cursemaven.com'
    }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    mavenCentral()
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Spectrum
    modImplementation "maven.modrinth:Revelationary:${project.revelationary_version}"
    modImplementation include("com.github.DaFuqs:Arrowhead:${project.arrowhead_version}")
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"){
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation include("maven.modrinth:AdditionalEntityAttributes:${project.additional_entity_attributes_version}")
    modImplementation include("com.github.devs-immortal:Incubus-Core:${project.incubus_core_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}")
    modImplementation include("dev.onyxstudios.cardinal-components-api:cardinal-components-level:${project.cca_version}")
    modApi("com.terraformersmc:modmenu:${project.modmenu_version}")
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    modImplementation "io.wispforest:owo-lib:${project.owo_version}"
    modImplementation include("com.github.DaFuqs:DimensionalReverb:${project.dimensional_reverb_version}")
    modImplementation "maven.modrinth:spectrum:${project.spectrum_version}"

    // Actual other dependencies
    modImplementation "maven.modrinth:trinkets:${project.trinkets_version}"
    implementation include("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")
    annotationProcessor("com.github.LlamaLad7:MixinExtras:${project.mixin_extras_version}")

    // Dev Auth
    modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:1.1.0")
    }

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
